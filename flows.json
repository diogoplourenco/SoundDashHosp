[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0ef3dadb8b68ec5b",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "MQTT Mosquitto",
        "topic": "csv/data",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "053d270633e4197a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "a63f5e729bb810a7",
                "c1f60bdd5eb55ade"
            ]
        ]
    },
    {
        "id": "a63f5e729bb810a7",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "Data from Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "c1f60bdd5eb55ade",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Json_to_Influx",
        "func": "var mensagem = {}\nmensagem.measurement = msg.payload.sensor_name\nmensagem.payload = {\n    \"timestamp\": Number(msg.payload.TimeStamp), \n    \"LAEZ\": Number(msg.payload.LAEZ),\n    \"Evento\": Number(msg.payload.LAEC),\n    \"LAEA\": Number(msg.payload.LAEA),\n    \"LZpeak\": Number(msg.payload.LZpeak),\n    \"LZpeakT\": Number(msg.payload.LZpeakT),\n    \"LCpeak\": Number(msg.payload.LCpeak),\n    \"LCpeakT\": Number(msg.payload.LCpeakT),\n    \"LApeak\": Number(msg.payload.LApeak),\n    \"LApeakT\": Number(msg.payload.LApeakT),\n    \"LAFmax\": Number(msg.payload.LAFmax),\n    \"LAFmaxT\": Number(msg.payload.LAFmaxT),\n    \"LAFmin\": Number(msg.payload.LAFmin),\n    \"LAFminT\": Number(msg.payload.LAFminT),\n    \"LZeq\": Number(msg.payload.LZeq),\n    \"LCeq\": Number(msg.payload.LCeq),\n    \"LAeq\": Number(msg.payload.LAeq),\n    \"00025_Hz\": Number(msg.payload.BT25),\n    \"00031.5_Hz\": Number(msg.payload.BT31_5),\n    \"00040_Hz\": Number(msg.payload.BT40),\n    \"00050_Hz\": Number(msg.payload.BT50),\n    \"00063_Hz\": Number(msg.payload.BT63),\n    \"00080_Hz\": Number(msg.payload.BT80),\n    \"00100_Hz\": Number(msg.payload.BT100),\n    \"00125_Hz\": Number(msg.payload.BT125),\n    \"00160_Hz\": Number(msg.payload.BT160),\n    \"00200_Hz\": Number(msg.payload.BT200),\n    \"00250_Hz\": Number(msg.payload.BT250),\n    \"00315_Hz\": Number(msg.payload.BT315),\n    \"00400_Hz\": Number(msg.payload.BT400),\n    \"00500_Hz\": Number(msg.payload.BT500),\n    \"00630_Hz\": Number(msg.payload.BT630),\n    \"00800_Hz\": Number(msg.payload.BT800),\n    \"01000_Hz\": Number(msg.payload.BT1000),\n    \"01250_Hz\": Number(msg.payload.BT1250),\n    \"01600_Hz\": Number(msg.payload.BT1600),\n    \"02000_Hz\": Number(msg.payload.BT2000),\n    \"02500_Hz\": Number(msg.payload.BT2500),\n    \"03150_Hz\": Number(msg.payload.BT3150),\n    \"04000_Hz\": Number(msg.payload.BT4000),\n    \"05000_Hz\": Number(msg.payload.BT5000),\n    \"06300_Hz\": Number(msg.payload.BT6300),\n    \"08000_Hz\": Number(msg.payload.BT8000),\n    \"10000_Hz\": Number(msg.payload.BT10000),\n    \"12500_Hz\": Number(msg.payload.BT12500),\n    \"16000_Hz\": Number(msg.payload.BT16000),\n    \"20000_Hz\": Number(msg.payload.BT20000),\n    \"LAEA_SLOW_Event\" : Number(msg.payload.LAEA_SLOW_Event),\n    \"EventDetect\" : Number(msg.payload.EventDetect),\n    \"EventType1\": Number(msg.payload.EventType1),\n    \"EventType2\": Number(msg.payload.EventType2),\n    \"EventType3\": Number(msg.payload.EventType3),\n    \"EventType4\": Number(msg.payload.EventType4),\n    \"EventType5\": Number(msg.payload.EventType5),\n    \"EventType6\": Number(msg.payload.EventType6),\n    \"EventType7\": Number(msg.payload.EventType7),\n    \"EventType8\": Number(msg.payload.EventType8),\n    \"EventType9\": Number(msg.payload.EventType9),\n    \"EventType10\": Number(msg.payload.EventType10)\n}\nreturn mensagem",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 160,
        "wires": [
            [
                "137808e8f2db403e",
                "51ad5de49e910b94"
            ]
        ]
    },
    {
        "id": "137808e8f2db403e",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "Print Influx Content",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "51ad5de49e910b94",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "influxdb": "56816188953333bb",
        "name": "InfluxDB",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "Sensor_Data",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ISEL",
        "bucket": "Sensor_Data",
        "x": 1000,
        "y": 160,
        "wires": []
    },
    {
        "id": "5d20d976ab63dc48",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Json_to_Influx_timestamp_as_time",
        "func": "var mensagem = {}\nmensagem.payload = {\n    \"time\" : Number(msg.payload.TimeStamp) * 1000,\n    \"LAEA\": Number(msg.payload.LAEA),\n    \"LCpeak\" : Number(msg.payload.LCpeak),\n    \"LCpeakT\": Number(msg.payload.LCpeakT),\n    \"LAFmax\": Number(msg.payload.LAFmax),\n    \"LAFmaxT\": Number(msg.payload.LAFmaxT),\n    \"LAFmin\": Number(msg.payload.LAFmin),\n    \"LAFminT\": Number(msg.payload.LAFminT),\n    \"LAeq\": Number(msg.payload.LAeq)\n}\nreturn mensagem",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "053d270633e4197a",
        "type": "mqtt-broker",
        "name": "Official Mosquitto Local",
        "broker": "192.168.1.107",
        "port": "1881",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "56816188953333bb",
        "type": "influxdb",
        "hostname": "192.168.1.99",
        "port": 8086,
        "protocol": "http",
        "database": "Sensor_Data",
        "name": "Influx Local",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://192.168.1.107:8086",
        "timeout": 10,
        "rejectUnauthorized": false
    }
]